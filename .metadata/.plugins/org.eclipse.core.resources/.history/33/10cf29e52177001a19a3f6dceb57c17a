package com.bank.service;

import java.util.List;
import java.util.Set;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.bank.beans.AccountInfo;
import com.bank.entity.Account;
import com.bank.entity.AccountTransactions;
import com.bank.entity.Customer;
import com.bank.exceptionhandler.AccountNotFoundException;
import com.bank.repository.AccountRepository;
import com.bank.repository.CustomerRepository;

/**
 * @author saluri
 *
 */
@Service
public class AccountService {

	@Autowired
	private AccountRepository accountRepository;

	@Autowired
	private CustomerRepository customerRepository;
	

	public Customer getAccountDetails(Long accountNumber)throws AccountNotFoundException {
		Account accountEntity = null;
		Customer customerEntity = null;
		try {
			accountEntity = accountRepository.getOne(accountNumber);
			if(accountEntity==null) {
				throw new AccountNotFoundException("Account Doesn't exist!");
			}
			 customerEntity=accountEntity.getCustomer();
		}
		catch(Exception e) {
			throw new AccountNotFoundException("Account Doesn't exist! please contact your home branch");
		}
		return customerEntity;
	}

	public AccountInfo createAccount(Customer customerEntity) {
		AccountInfo accountInfo = null;
		try {
			if (customerEntity != null) {
				Set<Account> accounts = customerEntity.getAccounts();
				accounts.forEach(
						account -> account.setUserName(customerEntity.getFirstName() + customerEntity.getLastName()));
				customerEntity.setAccounts(accounts);
				Set<Account> account = customerRepository.save(customerEntity).getAccounts();
				accountInfo = new AccountInfo();
				for (Account acc : account) {
					accountInfo.setAccountNumber(acc.getAccountNumber());
					accountInfo.setUserName(acc.getUserName());
					accountInfo.setStatus(acc.getStatus());
					accountInfo.setAccountType(acc.getAccountType());
				}
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		return accountInfo;
	}
	public List<AccountTransactions> getAccountTransactions(){
		
	}

}