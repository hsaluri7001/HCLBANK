package com.bank.service;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.bank.entity.Account;
import com.bank.entity.AccountTransactions;
import com.bank.exceptionhandler.AccountNotFoundException;
import com.bank.repository.AccountRepository;

@Service
public class FundTransferService {
	
	@Autowired
	private AccountRepository accountRepository;
	
	public Integer fundTransfer(AccountTransactions accountTransactions) {
		Integer transactionId=0;
		Account senderAccount=accountRepository.getOne(accountTransactions.getSenderAccountNumber());
		Account receiverAccount=accountRepository.getOne(accountTransactions.getReceiverAccountNummber());
		List<Account> accounts=new ArrayList<>();
		if(senderAccount!=null&&receiverAccount!=null) {
		    if(!senderAccount.getStatus().equals("ACTIVE")&&!receiverAccount.getStatus().equals("ACTIVE")) {
		    	try {
		    	Double senderTotalBalance=senderAccount.getBalance();
		    	senderTotalBalance=senderTotalBalance-accountTransactions.getTransactionAmount();
		    	Double recieverTotalBalance=receiverAccount.getBalance();
		    	recieverTotalBalance=recieverTotalBalance-accountTransactions.getTransactionAmount();
		    	senderAccount.setBalance(senderTotalBalance);
		    	receiverAccount.setBalance(recieverTotalBalance);
		    	accounts.add(senderAccount);
		    	accounts.add(receiverAccount);
		    	accountRepository.saveAll(accounts);
		    	
		    	}
		    	catch(Exception e) {
		    		
		    	}
		    	
		    	
		    }
		    else {
		    	throw new AccountNotFoundException("Account is not active. please contact bank!");
		    }
		}
		else {
			throw new AccountNotFoundException("Account Doesn't exist!");
		}
		return transactionId;
		
	}
}
